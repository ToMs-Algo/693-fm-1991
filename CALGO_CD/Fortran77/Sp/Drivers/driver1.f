C--**--CH4068--693--C:U--7:8:2000
C--**--CH3655--693--C:SU--8:6:2000
C--**--CH1932--693--P:RW--2:9:1999
C--**--CH1928--693--U:D--2:9:1999
      PROGRAM TEST
C     integer LMBUFF
C     integer LJSUMS
C                                                           3-21-90
C
C  This is a small test driver for the FM package.  Several constants
C  are computed and printed to 40 decimal accuracy.  FM numbers are
C  stored in packed format in the main program and calls are to the
C  packed version of each function (e.g., CALL FPADD instead of
C  CALL FMADD).
C
C  The output from this program should be:
C
C  SQRT(3) =
C        1.7320508075688772935274463415058723669428
C
C  2**(1/3) =
C        1.2599210498948731647672106072782283505703
C
C  LN(2) =
C        .6931471805599453094172321214581765680755
C
C  PI =
C        3.1415926535897932384626433832795028841972
C
C  SQRT(PI) =
C        1.7724538509055160272981674833411451827975
C
C  EXP(1) =
C        2.7182818284590452353602874713526624977572
C
C  LN(PI) =
C        1.1447298858494001741434273513530587116473
C
C  EXP(PI/4) =
C        2.1932800507380154565597696592787382234616
C
C  SIN(1) =
C        .8414709848078965066525023216302989996226
C
C  PHI =
C        1.6180339887498948482045868343656381177203
C
C  LN(PHI) =
C        .4812118250596034474977589134243684231352
C
C
C    , LJSUMS = 8*LUNPCK,
C    *          LMBUFF = ((LUNPCK+3)*(NBITS-1)*301)/2000 + 6  )
C
C
C
C
C
C
C     .. Parameters ..
      INTEGER MXNDIG,LPACK,LUNPCK,LMWA
      PARAMETER (MXNDIG=256,LPACK= (MXNDIG+1)/2+1,
     +          LUNPCK= (6*MXNDIG)/5+20,LMWA=2*LUNPCK)
C     ..
C     .. Scalars in Common ..
      DOUBLE PRECISION DPMAX
      REAL RUNKNO,SPMAX
      INTEGER IUNKNO,JBASE,JFORM1,JFORM2,KARGSW,KEXPOV,KEXPUN,KFLAG,
     +        KRAD,KROUND,KUNKNO,KW,KWARN,LVLTRC,MAXINT,MXBASE,MXEXP,
     +        MXEXP2,MXNDG2,NCALL,NDIG,NDIGE,NDIGLB,NDIGLI,NDIGPI,NJBE,
     +        NJBLB,NJBLI,NJBPI,NTRACE
C     ..
C     .. Arrays in Common ..
      INTEGER KSTACK(19),MESAV(LUNPCK),MLBSAV(LUNPCK),MLN1(LUNPCK),
     +        MLN2(LUNPCK),MLN3(LUNPCK),MLN4(LUNPCK),MPISAV(LUNPCK),
     +        MWA(LMWA)
C     ..
C     .. Local Scalars ..
      INTEGER NOGOOD
      CHARACTER*80 RESULT
C     ..
C     .. Local Arrays ..
      INTEGER MX(LPACK),MY(LPACK),MZ(LPACK)
C     ..
C     .. External Functions ..
      INTEGER I1MACH
      EXTERNAL I1MACH
C     ..
C     .. External Subroutines ..
      EXTERNAL CHECK,FPADD,FPDIV,FPDIVI,FPEXP,FPI2M,FPLN,FPPI,FPPRNT,
     +         FPPWR,FPSET,FPSIN,FPSQRT
C     ..
C     .. Common blocks ..
      COMMON /FM/MWA,NCALL,MXEXP,MXEXP2,KARGSW,KEXPUN,KEXPOV,KUNKNO,
     +       IUNKNO,RUNKNO,MXBASE,MXNDG2,KSTACK,MAXINT,SPMAX,DPMAX
      COMMON /FMSAVE/NDIGPI,NJBPI,NDIGE,NJBE,NDIGLB,NJBLB,NDIGLI,NJBLI,
     +       MPISAV,MESAV,MLBSAV,MLN1,MLN2,MLN3,MLN4
      COMMON /FMUSER/NDIG,JBASE,JFORM1,JFORM2,KRAD,KW,NTRACE,LVLTRC,
     +       KFLAG,KWARN,KROUND
C     ..
      NOGOOD = 0
C
C             Set precision to give at least 40 significant digits, and
C             initialize all FM parameters.  Set the print format to
C             give fixed point output with 40 places after the decimal.
C
      CALL FPSET(40)
      JFORM1 = 2
      JFORM2 = 40
C
      KW = I1MACH(2)
      OPEN (KW,FILE='res1')
C
      CALL FPI2M(3,MX)
      CALL FPSQRT(MX,MY)
      WRITE (KW,FMT=9000)
      CALL FPPRNT(MY)
      RESULT = ' 1.7320508075688772935274463415058723669428'
      CALL CHECK(RESULT,MY,NOGOOD,KW)
C
      CALL FPI2M(1,MY)
      CALL FPDIV(MY,MX,MY)
      CALL FPI2M(2,MX)
      CALL FPPWR(MX,MY,MZ)
      WRITE (KW,FMT=9010)
      CALL FPPRNT(MZ)
      RESULT = ' 1.2599210498948731647672106072782283505703'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPLN(MX,MZ)
      WRITE (KW,FMT=9020)
      CALL FPPRNT(MZ)
      RESULT = ' .6931471805599453094172321214581765680755'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPPI(MZ)
      WRITE (KW,FMT=9030)
      CALL FPPRNT(MZ)
      RESULT = ' 3.1415926535897932384626433832795028841972'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPSQRT(MZ,MZ)
      WRITE (KW,FMT=9040)
      CALL FPPRNT(MZ)
      RESULT = ' 1.7724538509055160272981674833411451827975'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPI2M(1,MX)
      CALL FPEXP(MX,MZ)
      WRITE (KW,FMT=9050)
      CALL FPPRNT(MZ)
      RESULT = ' 2.7182818284590452353602874713526624977572'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPPI(MX)
      CALL FPLN(MX,MZ)
      WRITE (KW,FMT=9060)
      CALL FPPRNT(MZ)
      RESULT = ' 1.1447298858494001741434273513530587116473'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPDIVI(MX,4,MY)
      CALL FPEXP(MY,MZ)
      WRITE (KW,FMT=9070)
      CALL FPPRNT(MZ)
      RESULT = ' 2.1932800507380154565597696592787382234616'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPI2M(1,MX)
      CALL FPSIN(MX,MZ)
      WRITE (KW,FMT=9080)
      CALL FPPRNT(MZ)
      RESULT = ' .8414709848078965066525023216302989996226'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPI2M(5,MX)
      CALL FPSQRT(MX,MX)
      CALL FPI2M(1,MY)
      CALL FPADD(MX,MY,MY)
      CALL FPDIVI(MY,2,MZ)
      WRITE (KW,FMT=9090)
      CALL FPPRNT(MZ)
      RESULT = ' 1.6180339887498948482045868343656381177203'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      CALL FPLN(MZ,MZ)
      WRITE (KW,FMT=9100)
      CALL FPPRNT(MZ)
      RESULT = ' .4812118250596034474977589134243684231352'
      CALL CHECK(RESULT,MZ,NOGOOD,KW)
C
      IF (NOGOOD.EQ.0) THEN
          WRITE (KW,FMT=9110)

      ELSE IF (NOGOOD.EQ.1) THEN
          WRITE (KW,FMT=9120)

      ELSE
          WRITE (KW,FMT=9130) NOGOOD
      END IF
C
      STOP

 9000 FORMAT (/' SQRT(3) =')
 9010 FORMAT (/' 2**(1/3) =')
 9020 FORMAT (/' LN(2) =')
 9030 FORMAT (/' PI =')
 9040 FORMAT (/' SQRT(PI) =')
 9050 FORMAT (/' EXP(1) =')
 9060 FORMAT (/' LN(PI) =')
 9070 FORMAT (/' EXP(PI/4) =')
 9080 FORMAT (/' SIN(1) =')
 9090 FORMAT (/' PHI =')
 9100 FORMAT (/' LN(PHI) =')
 9110 FORMAT (//' TEST COMPLETED.  NO ERRORS.',//)
 9120 FORMAT (//' TEST COMPLETED.  1 ERROR.',//)
 9130 FORMAT (//' TEST COMPLETED.',I4,' ERRORS.',//)
      END
      SUBROUTINE CHECK(RESULT,MX,NOGOOD,KW)
C     integer LMBUFF
C     integer LJSUMS
C     integer LMWA
C
C  Check to see that the computed result MX agrees with the
C  correct output RESULT.
C
C  NOGOOD counts the number of cases where errors were found.
C
C    *          ,LMWA   = 2*LUNPCK         , LJSUMS = 8*LUNPCK,
C    *          LMBUFF = ((LUNPCK+3)*(NBITS-1)*301)/2000 + 6  )
C
C
C     .. Parameters ..
      INTEGER MXNDIG,LPACK
      PARAMETER (MXNDIG=256,LPACK= (MXNDIG+1)/2+1)
C     ..
C     .. Scalar Arguments ..
      INTEGER KW,NOGOOD
      CHARACTER*80 RESULT
C     ..
C     .. Array Arguments ..
      INTEGER MX(LPACK)
C     ..
C     .. Local Scalars ..
      INTEGER J
C     ..
C     .. Local Arrays ..
      CHARACTER LINE(80)
C     ..
C     .. External Subroutines ..
      EXTERNAL FPOUT
C     ..
      CALL FPOUT(MX,LINE,80)
      DO 10 J = 1,80
          IF (LINE(J).NE.RESULT(J:J)) THEN
              NOGOOD = NOGOOD + 1
              WRITE (KW,FMT=9000) RESULT
              RETURN

          END IF

   10 CONTINUE
      RETURN

 9000 FORMAT (/' ERROR IN ROOTS.  THE CORRECT RESULT SHOULD BE:',//6X,A,
     +       /)
      END
